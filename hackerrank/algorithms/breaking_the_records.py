def breakingRecords(score):
    _len = len(score)
    if _len <= 1:
        return '00'
    record_high = score[0]
    record_low = score[0]
    broke_high = 0
    broke_low = 0

    i = 1
    while i < _len:
        _this = score[i]
        if _this > record_high:
            record_high = _this
            broke_high += 1
        if _this < record_low:
            record_low = _this
            broke_low += 1
        i += 1
    return '{} {}'.format(broke_high, broke_low)

input = "31 226 293 474 611 675 687 710 729 819 859 873 959 1037 1077 1221 1261 1324 1587 1641 1861 1861 1942 2017 2130 2431 2528 2553 2576 2747 2754 2881 2893 3000 3067 3286 3315 3396 3402 3674 3769 3778 3881 4269 4290 4312 4321 4398 4654 5092 5121 5136 5181 5235 5275 5354 5391 5424 5461 5486 5577 5684 5732 5751 5771 5783 5971 5990 6033 6120 6736 6835 6901 6916 6981 7072 7275 7307 7522 7549 7590 7629 7740 7767 7779 7942 7945 8262 8328 8388 8439 8665 8695 9080 9113 9212 9386 9457 9470 9471 9496 9600 9677 9678 9812 10114 10183 10301 10357 10610 10629 10674 10716 10857 10974 11133 11173 11201 11271 11295 11319 11357 11381 11478 11551 11567 11646 11681 11773 11783 12194 12300 12383 12443 12691 12818 12984 12985 13092 13187 13341 13490 13791 13943 14112 14735 14772 14995 15015 15357 15519 15550 15670 15698 15725 15750 15799 15861 16168 16316 16512 16654 16707 16804 16856 16862 16919 16945 16959 16993 17031 17108 17222 17451 17692 17755 17839 18045 18139 18190 18274 18936 19100 19234 19301 19304 19439 19470 19500 19642 19717 19924 19964 20000 20094 20204 20217 20290 20457 21005 21275 21282 21348 21380 21481 21488 21605 21710 21788 21935 22120 22346 22446 22528 22563 22716 22922 22973 22997 23372 23434 23471 23478 23564 23672 23753 23788 23801 23854 23900 23998 24030 24064 24447 24503 24706 24738 25014 25169 25246 25299 25341 25412 25420 25435 25473 25524 25673 25899 25964 26167 26242 26312 26430 26433 26704 26956 27259 27262 27307 27670 27815 27936 27951 27970 28478 28523 28944 28971 29088 29101 29156 29203 29258 29607 29961 29972 30094 30177 30298 30366 30422 30504 30537 30669 30815 30872 30890 30985 30991 31023 31179 31199 31305 31389 31438 31604 31622 31634 31900 31944 31990 32012 32255 32302 32336 32338 32626 32842 33131 33261 33399 33478 33571 33647 33974 34070 34138 34384 34610 34703 34802 34803 35183 35304 35325 35327 35428 35455 35513 35524 35538 35679 35784 35887 35921 36173 36205 36238 36372 36413 36447 36521 36531 36605 36681 36804 37045 37222 37275 37291 37468 37487 37577 37617 37635 37668 37693 37696 37782 37955 37976 38015 38126 38214 38316 38453 38561 38754 38775 39343 39365 39445 39823 39855 40058 40212 40249 40293 40407 40490 40638 40740 40810 40810 40896 40934 40979 41024 41052 41123 41150 41209 41250 41267 41381 41427 41468 41508 41509 41562 41886 41911 41958 41990 42303 42320 42325 42359 42376 42400 42416 42498 42518 42669 42708 42863 42981 43004 43121 43143 43247 43305 43320 43403 43574 43864 43997 44024 44030 44169 44236 44264 44342 44415 44460 44745 44776 44811 44837 44970 45035 45205 45360 45393 45401 45473 45603 45905 46176 46219 46597 46620 46717 46798 46969 47040 47077 47415 47484 47524 47557 47573 47580 47645 47926 48088 48169 48204 48221 48278 48322 48491 48735 48896 49012 49076 49130 49183 49221 49281 49422 49734 49823 49824 50173 50643 50708 50734 50874 50988 51104 51444 51450 51642 51653 51714 51790 51951 52046 52083 52310 52352 52367 52406 52411 52432 52483 52485 52606 52826 52903 52973 53185 53261 53475 53554 53569 53596 53739 53812 53888 53955 54026 54029 54045 54341 54472 54479 54526 54526 54556 54653 54710 54756 54781 54913 55001 55036 55122 55168 55433 55916 55937 55993 56068 56133 56150 56311 56445 56494 56733 56826 56842 57291 57366 57494 57497 57534 57768 57772 57819 58402 58584 58665 58823 58847 58963 59225 59226 59254 59366 59466 59494 59502 59655 59737 59750 59949 59985 60110 60136 60230 60268 60358 60390 60455 60590 60618 60668 60739 60809 60854 60899 60899 60966 60969 60984 61086 61146 61147 61240 61253 61386 61454 61671 61789 61850 61879 61944 62006 62066 62232 62283 62346 62468 62480 62586 62587 62636 62679 62930 62986 63196 63309 63483 63491 63683 63759 63767 63776 63860 63919 63943 64040 64243 64379 64664 64674 64724 64783 64794 64983 65132 65375 65422 65477 65717 65737 65910 66014 66061 66066 66082 66199 66264 66267 66275 66340 66379 66511 66625 66633 66673 66677 66708 66811 66879 67009 67027 67292 67343 67345 67357 67378 67536 67575 67739 67794 67962 68027 68028 68037 68149 68270 68437 68586 68607 68629 68949 68994 69066 69100 69251 69300 69333 69357 69432 69568 69777 69795 69860 69927 69979 70036 70385 70386 70451 70675 70717 70736 70828 70846 70922 71055 71081 71171 71273 71322 71489 71524 71599 71735 71875 71973 72002 72067 72112 72167 72309 72315 72394 72408 72442 72471 72493 72640 72705 72767 72783 73050 73058 73070 73126 73159 73180 73188 73263 73442 73467 73477 73726 73794 73837 73842 73866 74169 74278 74529 74644 74725 74791 75060 75398 75453 75544 75788 75800 75805 75942 76051 76183 76273 76371 76382 76399 76450 76500 76718 76734 77039 77161 77211 77251 77307 77445 77758 77778 77869 77900 77930 77980 78073 78080 78172 78226 78472 78541 78563 78579 78915 79278 79298 79329 79397 79442 79449 79534 79537 79566 79761 79764 79805 79877 80264 80308 80369 80482 80682 80776 80861 80977 81017 81125 81505 81522 81628 81717 81791 81994 82069 82072 82276 82344 82624 82636 82723 82816 82858 83006 83025 83156 83205 83255 83308 83355 83420 83524 83548 83648 83841 83900 83949 83951 84438 84458 84495 84509 84528 84529 85028 85114 85121 85362 85569 85764 85960 86057 86233 86382 86400 86475 86557 86706 86771 87182 87477 87573 87926 87978 88124 88364 88409 88473 88605 88705 88813 88938 89035 89082 89117 89118 89412 89462 89552 89666 89907 89928 89960 89993 90190 90574 90679 90756 90758 90801 90833 90920 91073 91300 91489 91603 91673 91675 91720 91846 91906 91968 92016 92073 92091 92271 92479 92481 92622 92756 92788 92831 92834 93045 93061 93086 93223 93234 93291 93590 93596 93693 93722 93855 93979 93980 94011 94031 94151 94296 94300 94333 94339 94643 94708 94802 94803 94888 94913 94972 95028 95629 95762 95889 95895 96004 96119 96347 96351 96422 96941 96947 96977 97042 97085 97195 97342 97343 97370 97582 97611 97730 97746 97943 98032 98258 98515 98556 98660 98681 98852 98863 98962 99140 99272 99328 99458 99494 99583 99684 99700 99701 99775 99811"
input = [int(x) for x in input.split(' ')]
print(breakingRecords(input))